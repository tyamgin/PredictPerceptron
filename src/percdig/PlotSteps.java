/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PlotSteps.java
 *
 * Created on 31.03.2013, 19:18:09
 */
package percdig;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.LayoutManager;
import javax.swing.BoxLayout;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JProgressBar;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.Arrays;
import java.awt.Font;

/**
 *
 * @author tyamgin
 */
public class PlotSteps extends javax.swing.JFrame {

    /** Creates new form PlotSteps */
    public PlotSteps(String title) 
    {
        initComponents();
        this.setTitle(title);
    }
    
    public void setValues(String[] texts, double[] values)
    {
        this.texts = Arrays.copyOf(texts, texts.length);
        this.values = Arrays.copyOf(values, values.length);
        normalize(this.values);
        max_val = this.values[0];
        for(int i = 1; i < this.values.length; i++)
            max_val = Math.max(max_val, this.values[i]);
    }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 424, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 261, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void normalize(double[] arr)
    {
        double sum = 0;
        for(int i = 0; i < arr.length; i++)
            sum += arr[i];
        for(int i = 0; i < arr.length; i++)
            arr[i] /= sum;
    }
    
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        
        int W = mainPanel.getWidth();
        int H = mainPanel.getHeight();
        
        int marginTop = 5;
        int marginLeft = 5;
        int marginRight = 5;
        int marginBottom = 5;
        
        int n = texts.length;
        int dist = 3;
        
        int hOne = (H - marginTop - marginBottom - (n - 1) * dist) / n;
        int wOne = (W - marginLeft - marginRight);
        
        
        
        Graphics gr = mainPanel.getGraphics();
        
        
        //System.out.println(gr.equals(gr));
        
        gr.clearRect(0, 0, W, H);
        gr.setColor(Color.red);
        
        int x = marginLeft;
        int y = marginTop;
        
        int textMargin = hOne / 5;
        int textSize = (hOne - textMargin * 2);
        
        gr.setFont(new Font("Segoe Print", 0, textSize));
        
        for(int i = 0; i < n; i++)
        {
            gr.setColor(Color.PINK);
            gr.fillRect(x, y, (int)(wOne * values[i] / max_val), hOne);
            gr.setColor(Color.black);
            gr.drawString(texts[i] + ", " + String.format("%.2f%%", values[i] * 100), marginLeft + dist, y + textMargin + textSize);
            y += hOne + dist;
        }
    }
    
    double max_val;
    String[] texts;
    double[] values;
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PlotSteps("").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
